version: "3.9"

services:
#  db:
#    image: postgres:12
#    restart: always
#    ports:
#      - '5433:5432'
#    environment:
#      POSTGRES_DB: "${DB_NAME}"
#      POSTGRES_USER: "${DB_USER}"
#      POSTGRES_PASSWORD: "${DB_PASSWORD}"
#    volumes:
#      - db:/var/lib/postgresql/data
#      - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
  redis:
    image: redis:6.2.6-alpine
    restart: always
    ports:
      - "6364:6379"
  rabbitmq:
    image: rabbitmq:3.9-alpine
    restart: always
    ports:
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
#  control_panel:
#    build: services/control_panel
#    restart: always
#    ports:
#      - '8080:80'
#    environment:
#      NODE_ENV: production
#    volumes:
#      - '.:/app'
  worker:
    build:
      context: '.'
      dockerfile: Dockerfile
    restart: always
    command: poetry run celery --app services.worker.app worker --loglevel INFO --concurrency=1
    depends_on:
      - redis
      - rabbitmq
    environment:
      ASSISTANT_GRPC_ADDR: "assistant:50051"
      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq"
      CELERY_RESULT_BACKEND: "redis://redis"
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ".:/app"
      - cached_posts:/tmp/posts
#  control_panel_api:
#    build:
#      context: '.'
#      dockerfile: Dockerfile
#    restart: always
#    ports:
#      - '8000'
#    depends_on:
#      - db
#    command: poetry run uvicorn services.control_panel_api.main:app --host 0.0.0.0 --port 8000
#    environment:
#      DB_NAME: "${DB_NAME}"
#      DB_USER: "${DB_USER}"
#      DB_PASSWORD: "${DB_PASSWORD}"
#      DB_HOST: db
#    volumes:
#      - '.:/app'
  assistant_manager:
    build:
      context: '.'
      dockerfile: Dockerfile
    restart: always
    command: poetry run python -m services.assistant_manager.main
    depends_on:
      - redis
    environment:
      TELEGRAM_API_TOKEN: "${TELEGRAM_API_TOKEN}"
      MY_TELEGRAM_ID: "${MY_TELEGRAM_ID}"
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ".:/app"
  assistant:
    build:
      context: '.'
      dockerfile: Dockerfile
    restart: always
    command: poetry run python -m services.assistant.main
    depends_on:
      - redis
      - worker
    ports:
      - "50051:50051"
    environment:
      ASSISTANT_GRPC_ADDR: "assistant:50051"
      AIOTDLIB_API_ID: "${AIOTDLIB_API_ID}"
      AIOTDLIB_API_HASH: "${AIOTDLIB_API_HASH}"
      PHONE_NUMBER: "${PHONE_NUMBER}"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CELERY_BROKER_URL: "amqp://admin:mypass@rabbitmq"
      CELERY_RESULT_BACKEND: "redis://redis"
    volumes:
      - ".:/app"
      - cached_posts:/tmp/posts

volumes:
  db:
    driver: local
  cached_posts: