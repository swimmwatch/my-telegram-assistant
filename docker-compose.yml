version: "3.9"

services:
  db:
    image: postgres:14-alpine
    restart: always
    env_file:
      - .env
    volumes:
      - db:/var/lib/postgresql/data

  redis:
    image: redis:6.2.6-alpine
    restart: always

  rabbitmq:
    image: rabbitmq:3.9-alpine
    restart: always
    env_file:
      - .env

  web:
    build:
      context: .
      dockerfile: web/Dockerfile
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    environment:
      NODE_ENV: production
    env_file:
      - .env

  worker:
    build:
      context: .
    restart: always
    command: celery --app services.worker.app worker --loglevel ${LOGURU_LEVEL} --concurrency=1
    depends_on:
      - redis
      - rabbitmq
    env_file:
      - .env
    volumes:
      - cached_posts:/tmp/posts

  api:
    build:
      context: .
    restart: always
    depends_on:
      - db
    command: uvicorn services.api.main:app --host 0.0.0.0 --port 3000
    env_file:
      - .env

  assistant_manager:
    build:
      context: .
    restart: always
    command: python -m services.assistant_manager.main
    depends_on:
      - assistant
    env_file:
      - .env

  assistant:
    build:
      context: .
    restart: always
    command: python -m services.assistant.main
    depends_on:
      - redis
      - worker
    env_file:
      - .env
    volumes:
      - cached_posts:/tmp/posts

  flower:
    image: mher/flower:0.9.7
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - redis
      - worker

volumes:
  db:
    driver: local
  cached_posts:
